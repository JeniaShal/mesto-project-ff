{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modals.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["  const config = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-10',\r\n    headers: {\r\n      authorization: 'a880a708-a06a-465b-b123-b5ee4da8a512',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n   \r\n  const editProfileForm = document.forms.edit_profile;                              // форма редактирования профиля\r\n  const editProfileNameInput = editProfileForm.elements.name                        // инпут имени в форме редактирования профиля\r\n  const editProfileDescriptionInput = editProfileForm.elements.description          // инпут профессии в форме редактирования профиля\r\n  export const newPlaceForm = document.forms.new_place;                                    //форма добавления новой карточки\r\n  const placeInput = newPlaceForm.elements.place_name;                              //поле названия карточки\r\n  const urlInput = newPlaceForm.elements.link;                                      //поле ссылки на карточку\r\n  export const newAvatarForm = document.forms.edit_avatar;                                 //поле редактирования аватара\r\n  const avatarInput = newAvatarForm.elements.avatar;                                //инпут ссылки на аватар\r\n\r\n  // Функция выгрузки данных для профиля\r\nexport function getProfileData () {\r\n  return fetch (`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then ((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  // Функция выгрузки карточек\r\nexport function getInitialCards () {\r\n  return fetch (`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n    })\r\n    .then ((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n          // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  // Функция редактирования профиля на сервере\r\nexport function editProfile () {\r\n  return fetch (`${config.baseUrl}/users/me`,  {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: `${editProfileNameInput.value}`,\r\n      about: `${editProfileDescriptionInput.value}`,\r\n    }),\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n        // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n }\r\n\r\n// Функция отправки карточки на сервер\r\nexport function addCardToServer () {\r\n  return fetch (`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: `${placeInput.value}`,\r\n      link: `${urlInput.value}`,\r\n    })\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}\r\n\r\n// Функция удаления карточки с сервера\r\nexport function deleteCardOnServer (id) {\r\n  return fetch (`${config.baseUrl}/cards/${id}`, {\r\n  method: 'DELETE',\r\n  headers: config.headers,\r\n})\r\n.then ((res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n// если ошибка, отклоняем промис\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n})\r\n}\r\n\r\n// Функция отправки лайка карточки на сервер\r\nexport function SendLikeCardOnServer (id) {\r\n  return fetch (`${config.baseUrl}/cards/likes/${id}`, {\r\n  method: 'PUT',\r\n  headers: config.headers,\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}\r\n\r\nexport function DeleteLikeFromServer (id) {\r\n  return fetch (`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n})\r\n    .then ((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    // если ошибка, отклоняем промис\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}    \r\n\r\n// Функция отправки на сервер ссылки на новый аватар\r\nexport function ChangeAvatar () {\r\n  return fetch (`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      avatar: `${avatarInput.value}`\r\n    })\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}","import {\r\n  deleteCardOnServer, SendLikeCardOnServer, DeleteLikeFromServer\r\n} from './api'\r\n\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst cardElement = cardTemplate.querySelector('.card');\r\n\r\n// Функция лайка\r\nfunction switchOnLike(icon) {\r\n  icon.classList.add('card__like-button_is-active');\r\n}\r\n\r\n// Функция снятия лайка\r\nfunction switchOffLike(icon) {\r\n  icon.classList.remove('card__like-button_is-active');\r\n}\r\n\r\n// Функция переключения лайка с отправкой данных на сервер\r\nfunction toggleLike(icon, data, counter) {\r\n  if (!icon.classList.contains('card__like-button_is-active')) {\r\n    switchOnLike(icon)\r\n    SendLikeCardOnServer(data._id)\r\n    .then((response) => {\r\n      console.log(response.likes.length)\r\n      counter.textContent = response.likes.length\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  else {\r\n    switchOffLike(icon)\r\n    DeleteLikeFromServer(data._id)\r\n    .then((response) => {\r\n      console.log(response.likes.length)\r\n      counter.textContent = response.likes.length\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// @todo: Функция удаления карточки\r\nexport function deleteCard(button) {\r\n  const delIcon = button.closest('.card');\r\n  delIcon.remove();\r\n};\r\n\r\n// @todo: Функция создания карточки\r\nexport function createCard(data, profile, onPopup) {\r\n  const cardItem = cardElement.cloneNode(true);                                \r\n  const cardImage = cardItem.querySelector('.card__image');             \r\n  const cardTitle = cardItem.querySelector('.card__title');\r\n  const delButton = cardItem.querySelector('.card__delete-button');\r\n  const likeButton = cardItem.querySelector('.card__like-button');\r\n  const likeCounter = cardItem.querySelector('.card__like-counter');\r\n  const dataId = data._id;\r\n  cardImage.src = data.link;\r\n  cardImage.alt = data.name;\r\n  cardTitle.textContent = data.name;\r\n  likeCounter.textContent = data.likes.length;\r\n  if (data.owner['_id'] !== profile['_id']) {\r\n    delButton.classList.add('card__delete-button_disabled')\r\n    delButton.setAttribute('disabled', true)\r\n  }\r\n  else {\r\n    delButton.classList.remove('card__delete-button_disabled')\r\n    delButton.removeAttribute('disabled')\r\n    delButton.addEventListener('click', ()=>{\r\n      deleteCardOnServer(dataId)\r\n      .catch ((error) => {\r\n        console.log(error)\r\n      })\r\n      deleteCard(delButton)\r\n    });\r\n  }                 \r\n    cardImage.addEventListener('click', ()=>{\r\n    onPopup(data);\r\n  });\r\n  likeButton.addEventListener('click', ()=> {\r\n    toggleLike(likeButton, data, likeCounter)\r\n  \r\n  });\r\n  return cardItem;\r\n}\r\n\r\n","\r\n// Функция открытия модального окна\r\nexport function openModalCard (modalCard) {\r\n  modalCard.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeOnEscape);\r\n  \r\n} \r\n\r\n// Функция закрытия окна  \r\nexport function onClose(modalCard) {\r\n  modalCard.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeOnEscape);\r\n}\r\n\r\n// Функция закрытия по эскейпу\r\nexport function closeOnEscape (e) {\r\n  if(e.key === 'Escape') {\r\n    const item = document.querySelector('.popup_is-opened');\r\n    onClose(item);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// Функция показа сообщения об ошибке при введении текста в форму \r\nfunction showInputError(popupForm, popupInput, errorMessage, validationConfig) {\r\n  const errorElement = popupForm.querySelector(`.${popupInput.id}-error`);\r\n  popupInput.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\n// Функция удаления сообщения об ошибке при введении текста в форму\r\nfunction hideInputError (popupForm, popupInput, validationConfig) {\r\n  const errorElement = popupForm.querySelector(`.${popupInput.id}-error`);\r\n  popupInput.classList.remove(validationConfig.inputErrorClass)\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n}\r\n\r\n// Функция проверки поля формы\r\nfunction checkValidity(popupForm, popupInput, validationConfig) {\r\n  if (popupInput.validity.patternMismatch) {\r\n    popupInput.setCustomValidity(popupInput.dataset.error_message);\r\n  }\r\n\r\n  else {\r\n    popupInput.setCustomValidity('')\r\n  }\r\n\r\n\r\n  if(!popupInput.validity.valid) {\r\n    showInputError(popupForm, popupInput, popupInput.validationMessage, validationConfig);\r\n  }\r\n  else {\r\n    hideInputError(popupForm, popupInput, validationConfig);\r\n  }\r\n}\r\n\r\n// Функция поиска невалидных полей в форме\r\nfunction hasInvalidInput (inputList) {\r\n  return inputList.some(function (inputElement) {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\n// Функция переключения кнопки в случае невалидности поля \r\nfunction toggleButtonState (inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.setAttribute('disabled', true);\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  }\r\n  else {\r\n    buttonElement.removeAttribute('disabled');\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\n// Функция навешивающая обработчик ввода на все поля формы\r\nfunction setEventListeners (popupForm, validationConfig) {\r\n  const inputList = Array.from(popupForm.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = popupForm.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach(function(popupInput) {\r\n    popupInput.addEventListener('input', function() {\r\n    checkValidity(popupForm, popupInput, validationConfig)\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n   });\r\n  })\r\n}\r\n\r\n// Функция очищения ошибок валидации и деактивации кнопки\r\nexport function clearValidation(popupForm, validationConfig) {\r\n  const popupInput = popupForm.querySelector(validationConfig.inputSelector);\r\n  hideInputError(popupForm, popupInput, validationConfig);\r\n  \r\n  const buttonElement = popupForm.querySelector(validationConfig.submitButtonSelector);\r\n  buttonElement.setAttribute('disabled', true);\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}\r\n\r\n// Функция навешивания обработчика ввода на все формы документа\r\nexport function enableValidation (validationConfig) {\r\n  const popupForms = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  popupForms.forEach(function(popupForm) {\r\n    setEventListeners (popupForm, validationConfig);\r\n  })\r\n}\r\n\r\n","import './pages/index.css';\r\n\r\nimport { \r\n  createCard,\r\n} from './components/card';\r\n\r\nimport { \r\n  openModalCard,\r\n  onClose,\r\n} from './components/modals';\r\n\r\nimport { \r\n  clearValidation, \r\n  enableValidation \r\n} from './components/validation';\r\n\r\nimport {\r\n  getProfileData,\r\n  getInitialCards,\r\n  editProfile,\r\n  addCardToServer,\r\n  ChangeAvatar,\r\n  newPlaceForm,\r\n  newAvatarForm,\r\n} from './components/api';\r\n\r\n// @todo: DOM узлы\r\nconst cardContainer = document.querySelector('.places__list');\r\n\r\n// редактирование профиля\r\nconst profileEditButton = document.querySelector('.profile__edit-button');      //кнопка редактирования профиля\r\nconst profileTitle = document.querySelector('.profile__title');                 //заголовок с именем профиля, нужен, чтобы отображаться при открытии формы редактирования профиля\r\nconst profileDescribtion = document.querySelector('.profile__description');     //заголовок с работой, нужен, чтобы отображаться при открытии формы редактирования профиля\r\nconst formElement = document.querySelector('.popup__form');                     //форма редактирования (общая)\r\nconst nameInput = formElement.querySelector('.popup__input_type_name');         //поле имени\r\nconst jobInput = formElement.querySelector('.popup__input_type_description');   //поле вида деятельности\r\nconst popupEdit = document.querySelector('.popup_type_edit');                   //попап редактирования профиля \r\nconst profileEditSubmitButton = popupEdit.querySelector('.popup__button');      //кнопка сабмита попапа редактирования\r\n\r\n// редактирование аватара\r\nconst popupAvatar = document.querySelector('.popup_type_new-avatar')            //попап изменения аватара\r\nconst changeAvatarButton = popupAvatar.querySelector('.popup__button')          //кнопка сабмита попапа изменения аватара\r\n\r\n//добавление карточки\r\nconst newCardButton = document.querySelector('.profile__add-button');           //кнопка добавления карточки\r\nconst popupAdd = document.querySelector('.popup_type_new-card');                //попап добавления новой карточки\r\nconst cardContent = document.querySelector('.popup_type_image');                //контейнер большой карточки \r\nconst cardLargeImage = cardContent.querySelector('.popup__image');              //большая карточка\r\nconst cardCaption = cardContent.querySelector('.popup__caption');               //подпись к карточке\r\nconst newCardSubmitButton = popupAdd.querySelector('.popup__button');           //кнопка сабмита попапа добавления кнопки\r\n\r\n//общее\r\nconst popupCloseButtons = Array.from(document.querySelectorAll('.popup__close'));  //массив кнопок закрытия \r\nconst modalCards = Array.from(document.querySelectorAll('.popup'));             //массив модальных окон\r\nconst profileImage = document.querySelector('.profile__image');                 //картинка профиля\r\nconst buttonTextWhileLoading = 'Сохранение...'\r\nconst buttonTextNormal = 'Сохранить'\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_inactive',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active',\r\n}\r\n\r\n// Функция выведения большой карточки\r\nfunction showCardContent(item) {\r\n  cardLargeImage.src = item.link;\r\n  cardLargeImage.alt = item.name;\r\n  cardCaption.textContent = item.name;\r\n  openModalCard (cardContent);\r\n};\r\n\r\n// Функция обработки загрузки\r\nfunction handleLoading (isFetching, button) {\r\n  if (isFetching) {\r\n    button.textContent = buttonTextWhileLoading;\r\n    button.setAttribute('disabled', true);\r\n  }\r\n  else {\r\n    button.textContent = buttonTextNormal\r\n    button.removeAttribute('disabled');\r\n  }\r\n}\r\n\r\n// Функция открытия модального окна \"редактировать профиль\" \r\nfunction openProfileEditPopup () {\r\n  openModalCard (popupEdit);\r\n  getProfileData()\r\n  .then((profile) => {\r\n    nameInput.value = profile.name\r\n    jobInput.value = profile.about\r\n  })\r\n}\r\n\r\n// Функция открытия модального окна \"добавить карточку\" \r\nfunction openProfileAddPopup () {\r\n  openModalCard (popupAdd);\r\n}\r\n\r\n// Функция открытия модального окна \"редактировать аватар\"\r\nfunction openAvatarEdit () {\r\n  openModalCard (popupAvatar);\r\n}\r\n\r\n//Функция сабмита модального окна \"добавить карточку\"\r\nfunction handleAddFormSubmit(evt){\r\n  evt.preventDefault();\r\n  handleLoading(true, newCardSubmitButton)\r\n  Promise.all([getProfileData(), addCardToServer()])\r\n  .then (([profile, data]) =>{\r\n  const card = createCard(data, profile, showCardContent);\r\n  cardContainer.prepend(card)\r\n})\r\n  .catch ((error) => {\r\n    console.log(error)\r\n  })\r\n  .finally (() => {handleLoading(false, newCardSubmitButton)})\r\n  newPlaceForm.reset();\r\n  onClose(popupAdd);\r\n  clearValidation (popupAdd, validationConfig);\r\n}\r\n\r\n// Функция сабмита модального окна \"редактировать профиль\"\r\nfunction handleEditFormSubmit(evt){\r\n  evt.preventDefault();\r\n  handleLoading(true, profileEditSubmitButton)\r\n  editProfile()\r\n  .then ((profile) => {\r\n    profileTitle.textContent = profile.name\r\n    profileDescribtion.textContent = profile.about\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n  })\r\n  .finally (() => {handleLoading(false, profileEditSubmitButton)})\r\n  onClose (popupEdit);\r\n  clearValidation (popupEdit, validationConfig);\r\n}\r\n\r\n// Функция сабмита модального окна \"редактировать аватар\"\r\nfunction handleAvatarEditSubmit (evt) {\r\n  evt.preventDefault();\r\n  handleLoading(true, changeAvatarButton)\r\n  ChangeAvatar ()\r\n  .then ((profile) => {\r\n    profileImage.style.backgroundImage = `url(${profile.avatar})`\r\n  })\r\n  .catch ((error) => {\r\n    console.log(error)\r\n  })\r\n  .finally (() => {handleLoading(false, changeAvatarButton)})\r\n  newAvatarForm.reset();\r\n  onClose(popupAvatar);\r\n  clearValidation (popupAvatar, validationConfig);\r\n}\r\n\r\nPromise.all([getProfileData(), getInitialCards()])\r\n  .then (([profile, cards]) => {\r\n    profileTitle.textContent = profile.name\r\n    profileDescribtion.textContent = profile.about\r\n    profileImage.style.backgroundImage = `url(${profile.avatar})`\r\n    cards.forEach (function(item) {\r\n      const card = createCard(item, profile, showCardContent);                                    \r\n      cardContainer.append(card);\r\n    })\r\n    })\r\n  .catch ((error) => {\r\n    console.log(error)\r\n  })\r\n\r\n\r\n// Запуск обработчика ввода на все формах документа\r\nenableValidation(validationConfig); \r\n\r\n\r\n// Обработчик кнопки \"редактировать профиль\" - открытие модального окна редактирования \r\nprofileEditButton.addEventListener('click', openProfileEditPopup);\r\n\r\n// Обработчик сабмита модального окна \"редактировать профиль\"\r\nformElement.addEventListener('submit', handleEditFormSubmit);\r\n\r\n// Обработчик изображения аватара - открытие модального окна редактирования аватара\r\nprofileImage.addEventListener('click', openAvatarEdit); \r\n\r\n// Обработчик сабмита модального окна \"обновить аватар\"\r\nnewAvatarForm.addEventListener('submit', handleAvatarEditSubmit);\r\n\r\n// Обработчик кнопки \"добавить место\" - открытие модального окна \"новая карточка\" \r\nnewCardButton.addEventListener('click', openProfileAddPopup);\r\n\r\n// Обработчк сабмита модального окна \"добавить новую карточку\"\r\nnewPlaceForm.addEventListener('submit', handleAddFormSubmit);\r\n\r\n// Обработчик слушателя с функцией закрытия на все кнопки закрытия\r\npopupCloseButtons.forEach (function (button) {\r\n  button.addEventListener('click', function () {\r\n    const modalCard = button.closest('.popup');\r\n    onClose(modalCard);\r\n  });\r\n})\r\n\r\n// Обработчик слушателя закрытия по оверлею на все модальные окна\r\nmodalCards.forEach (function (modalCard) {\r\n  modalCard.addEventListener('click', function(evt) {\r\n    if (evt.target.classList.contains('popup')) {\r\n      onClose(modalCard);\r\n    }      \r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  fetch('https://nomoreparties.co/v1/wff-cohort-10', {\r\n//   headers: {\r\n//     authorization: 'a880a708-a06a-465b-b123-b5ee4da8a512'\r\n//   }\r\n// })\r\n//   .then(res => res.json())\r\n//   .then((result) => {\r\n//     console.log(result);\r\n//   }); \r\n\r\n// fetch ('https://mesto.nomoreparties.co/v1/wff-cohort-10/cards', {\r\n//   headers: {\r\n//     authorization: 'a880a708-a06a-465b-b123-b5ee4da8a512'}\r\n// })\r\n//   .then ((res) => {\r\n//     return res.json()\r\n//   })\r\n//   .then ((data) => {\r\n//     console.log(data)\r\n//   })\r\n\r\n\r\n// fetch ('https://mesto.nomoreparties.co/v1/wff-cohort-10/users/me', {\r\n//   headers: {\r\n//     authorization: 'a880a708-a06a-465b-b123-b5ee4da8a512'}\r\n// })\r\n//   .then ((res) => {\r\n//     return res.json()\r\n//   })\r\n//   .then ((data) => {\r\n//     console.log(data)\r\n//   })\r\n\r\n"],"names":["config","baseUrl","headers","authorization","editProfileForm","document","forms","edit_profile","editProfileNameInput","elements","name","editProfileDescriptionInput","description","newPlaceForm","new_place","placeInput","place_name","urlInput","link","newAvatarForm","edit_avatar","avatarInput","avatar","getProfileData","fetch","concat","then","res","ok","json","Promise","reject","status","cardElement","querySelector","content","createCard","data","profile","onPopup","cardItem","cloneNode","cardImage","cardTitle","delButton","likeButton","likeCounter","dataId","_id","src","alt","textContent","likes","length","owner","classList","add","setAttribute","remove","removeAttribute","addEventListener","id","method","catch","error","console","log","closest","icon","counter","contains","switchOffLike","DeleteLikeFromServer","response","switchOnLike","toggleLike","openModalCard","modalCard","closeOnEscape","onClose","removeEventListener","e","key","hideInputError","popupForm","popupInput","validationConfig","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","inputElement","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","inputSelector","submitButtonSelector","cardContainer","profileEditButton","profileTitle","profileDescribtion","formElement","nameInput","jobInput","popupEdit","profileEditSubmitButton","popupAvatar","changeAvatarButton","newCardButton","popupAdd","cardContent","cardLargeImage","cardCaption","newCardSubmitButton","popupCloseButtons","Array","from","querySelectorAll","modalCards","profileImage","formSelector","showCardContent","item","handleLoading","isFetching","button","all","_ref3","_ref4","_slicedToArray","cards","about","style","backgroundImage","forEach","card","append","patternMismatch","setCustomValidity","dataset","error_message","errorMessage","showInputError","validationMessage","checkValidity","setEventListeners","enableValidation","value","evt","preventDefault","body","JSON","stringify","finally","reset","_ref","_ref2","prepend","target"],"sourceRoot":""}